{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "github>larivierec/home-cluster//.github/renovate/autoMerge.json5",
    "github>larivierec/home-cluster//.github/renovate/disabledDatasources.json5",
    "github>larivierec/home-cluster//.github/renovate/groups.json5",
    ":enableRenovate",
    ":dependencyDashboard",
    ":disableRateLimiting",
    ":automergeDigest",
    ":semanticCommits",
    "docker:enableMajor",
    "config:base"
  ],
  "username": "theriver-bot[bot]",
  "platform": "github",
  "timezone": "America/New_York",
  "suppressNotifications": ["prIgnoreNotification"],
  "dependencyDashboardTitle": "Renovate Dashboard",
  "rebaseWhen": "conflicted",
  "requireConfig": "optional",
  "onboarding": false,
  "helm-values": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"],
  },
  "kubernetes": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"],
  },
  "terraform": {
    "fileMatch": ["infrastructure/.+\\.tf$"],
  },
  "flux": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$"
    ]
  },
  "regexManagers": [
    {
      "description": "Process dependencies",
      "fileMatch": ["kubernetes/.+\\.ya?ml$"],
      "matchStrings": [
        // Example: `k3s_release_version: "v1.27.3+k3s1"`
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n",
        // Example: `- https://github.com/rancher/system-upgrade-controller/releases/download/v0.11.0/crd.yaml`
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ],
  "packageRules": [
    // Setup datasources
    {
      "matchDatasources": ["helm"],
      "semanticCommitScope": "charts",
      "commitMessageTopic": "{{depName}}",
      "commitMessageExtra": "to {{{newValue}}}",
      "separateMinorPatch": true,
      "ignoreDeprecated": true,
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(charts)!: ",
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
    },
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "matchUpdateTypes": ["major", "minor", "patch"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(images)!: ",
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
    },
    {
      "matchDatasources": ["terraform-provider"],
    },
    {
      "description": "minio",
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": ["quay.io/minio/minio"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/onedr0p/plex",
        "ghcr.io/onedr0p/plex-beta",
      ]
    },
  ],
}

