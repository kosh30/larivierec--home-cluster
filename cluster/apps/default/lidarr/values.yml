#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#
replicaCount: 2

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "exportarr"

controller:
  strategy: RollingUpdate
  surge: 1
  unavailable: 1

image:
  # -- image repository
  repository: ghcr.io/k8s-at-home/lidarr
  # -- image tag
  tag: latest
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: UTC

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    annotations:
      metallb.universe.tf/address-pool: network-services
      metallb.universe.tf/allow-shared-ip: default-lb
    ports:
      http:
        port: 8686

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

# -- Configures the probes for the main Pod.
# @default -- See values.yaml
probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
        - /usr/bin/env
        - bash
        - -c
        - curl --fail localhost:8686/api/v1/system/status?apiKey=`IFS=\> && while
          read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  config:
    enabled: true
  
  media:
    enabled: true
    accessMode: ReadWrite
    retain: true
    mountPath: /music
    hostPath: /mnt/nas/Music
    type: "hostPath"

  downloads:
    enabled: true
    retain: true
    type: pvc
    existingClaim: torrent
    mountPath: /downloads/transmission
    subPath: downloads/transmission

metrics:
  # -- Enable and configure Exportarr sidecar and Prometheus serviceMonitor.
  # @default -- See values.yaml
  enabled: true
  serviceMonitor:
    interval: 3m
    scrapeTimeout: 1m
    labels: {}
  prometheusRule:
    enabled: true
    labels: {}
    # -- Configure additionial rules for the chart under this key.
    # @default -- See prometheusrules.yaml
    rules: []
  
  exporter:
    enabled: true
    podMonitor:
      interval: 3m
      scrapeTimeout: 1m
      labels: {}
    image:
      repository: ghcr.io/onedr0p/exportarr
      tag: v0.6.1
      pullPolicy: IfNotPresent
    env:
      additionalMetrics: true
